from argparse import Namespace
from typing import Any

from gallia.command import UDSScanner
from gallia.log import get_logger
from gallia.services.uds import UDSRequestConfig

logger = get_logger(__name__)

class VulnerabilityScanner(UDSScanner):
    """Iterate sessions and services to find vulnerabilities"""

    COMMAND = "vulnerabilities"
    SHORT_HELP = "vulnerability scan on an ECU"
    EPILOG = "asdf"

    async def main(self, args: Namespace) -> None:
        logger.info('Vulnerability Scanner')

    async def unauthorized_ecu_reset(self, args: Namespace) -> dict[int, Any]:
        # Try ECU reset on non-default sessions
        
        # Hard Reset
        message = [0x11, 0x01]

        # Try adding 2 null bytes because my gut tells to do
        pdu = bytes(message) + bytes(2)

        try:
            resp = await self.ecu.send_raw(pdu, config=UDSRequestConfig(tags=["ANALYZE"]))
        except:
            pass